package com.ustglobal.stockmanagement.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;
import javax.persistence.TypedQuery;
import javax.transaction.Transaction;

import org.springframework.stereotype.Repository;

import com.ustglobal.stockmanagement.dto.Product;

@Repository
public class UserDaoImpl implements UserDAO{
	

	@PersistenceUnit
	private EntityManagerFactory factory;

	@Override
	public boolean addProduct(Product product) {
		
		try {
			EntityManager manager = factory.createEntityManager();
			EntityTransaction transaction = manager.getTransaction();
			transaction.begin();
			manager.persist(product);
			transaction.commit();
			manager.close();
			
		}catch(Exception e) {
			e.printStackTrace();
		}
		return true;
	}

	@Override
	public boolean modify(Product product) {
		try {
			EntityManager manager = factory.createEntityManager();
			EntityTransaction transaction = manager.getTransaction();
			transaction.begin();
			Product product1 =manager.find(Product.class, product.getPid());
			product1.setName(product.getName());
			product1.setCompany(product.getCompany());
			product1.setCategory(product.getCategory());
			product1.setPrice(product.getPrice());
			product1.setQuantity(product.getQuantity());
			transaction.commit();
		}catch(Exception e) {
			e.printStackTrace();
			
		}
		return true;
	}

	@Override
	public List<Product> searchByName(String name) {
		List<Product> products = null;
		try {
		EntityManager manager = factory.createEntityManager();
		String jpql ="from Product where name=:name";
			TypedQuery<Product> query =manager.createQuery(jpql, Product.class);
			query.setParameter("name", name);
			products = query.getResultList();
		}catch(Exception e) {
			e.printStackTrace();
		}
		return products;
	}

	@Override
	public Product searchByCategory(String category) {
		Product products = null;
		try {
		EntityManager manager = factory.createEntityManager();
		String jpql ="from Product where category=:category";
			TypedQuery<Product> query =manager.createQuery(jpql, Product.class);
			query.setParameter("category",category);
			products = query.getSingleResult();
		}catch(Exception e) {
			e.printStackTrace();
		}
		return products;
	}

	@Override
	public Product searchByCompany(String company) {
		Product products = null;
		try {
		EntityManager manager = factory.createEntityManager();
		String jpql ="from Product where company=:company";
			TypedQuery<Product> query =manager.createQuery(jpql, Product.class);
			query.setParameter("company",company);
			products = query.getSingleResult();
		}catch(Exception e) {
			e.printStackTrace();
		}
		return products;
	}

	@Override
	public Product getAll() {
		Product products = null;
		try {
		EntityManager manager = factory.createEntityManager();
		String jpql ="from Product";
			TypedQuery<Product> query =manager.createQuery(jpql, Product.class);
			products = query.getSingleResult();
		}catch(Exception e) {
			e.printStackTrace();
		}
		return products;
	}
	}
		


